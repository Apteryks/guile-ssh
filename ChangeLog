2014-01-28  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* doc/api-auth.texi, api-channels.texi, api-keys.texi,
	api-servers.texi, api-sessions.texi, api-version.texi,
	guile-ssh.texi: Improve.

	* doc/api-sessions.texi (Sessions): Improve description of
	`session-set!' procedure.
	* doc/api-servers.texi (Servers): Improve description of
	`server-set!' procedure.
	* doc/version.texi: Update.

	* src/server-func.c (set_option) [SSH_BIND_OPTIONS_LOG_VERBOSITY]:
	Use symbols to represent log levels instead of numbers.  All
	callers updated.
	(set_sym_opt): New procedure.
	* src/session-func.c: Move `log_verbosity' to `common.c' file.
	* src/common.c, src/common.h: Update.
	* examples/echo/server.scm (*default-log-verbosity*): Set to 'nolog.
	* examples/ssshd.scm (*default-log-verbosity*): Likewise.
	* NEWS: Update.

	* src/session-func.c (set_option)[SSH_OPTIONS_LOG_VERBOSITY]: Use
	symbols to represent log levels instead of numbers.  All callers
	updated.
	(set_sym_opt): New procedure.
	* examples/echo/client.scm (main): Set log verbosity to `nolog'.
	* examples/sssh.scm (main): Update.

	* NEWS: Update.  Update format.  Use org-mode by default.  Add
	copyright notice.

2014-01-27  Artyom Poptsov  <poptsov.artyom@gmail.com>

	Add documentation in Texinfo format.
	* configure.ac: Add `doc/Makefile' to `AC_CONFIG_FILES'.
	* Makefile.am (SUBDIRS): Add `doc' directory.
	* doc/Makefile.am: New file.
	* doc/api-auth.texi, doc/api-channels.texi, doc/api-keys.texi,
	doc/api-messages.texi, doc/api-servers.texi,
	doc/api-sessions.texi, doc/api-version.texi, doc/fdl.texi,
	doc/guile-ssh.texi, doc/indices.texi, doc/version.texi: New files.

	* NEWS: Update.

	* src/channel-func.c (guile_ssh_channel_get_stream): New procedure.
	* src/channel.scm (channel-get-stream): Export.

	* examples/echo/client.scm (main): Print MD5 sum if the server is
	not known.

2014-01-26  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/server-type.c (guile_ssh_is_server_p): New procedure.
	(guile_ssh_server_close_x): Remove.

	* src/server-type.h (guile_ssh_is_server_p): Export.
	* src/server.scm (server?): Export.
	* src/session-type.c (guile_ssh_is_session_p): New procedure.
	* src/session-type.h (guile_ssh_is_session_p): Export.
	* src/session.scm (session?): Export.
	* NEWS: Update.

2014-01-23  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/auth.h (guile_ssh_userauth_autopubkey_x): Export.

	* NEWS: Update.

	* src/key-func.c (guile_ssh_private_key_from_file): Rollback to
	the previous version of the procedure (which doesn't accept a
	passphrase as an argument) due to security considerations.  The
	problem is that the passphrase provided by the user will float
	around in (possibly swapped) memory unless it will be collected by
	the GC.

	Thanks to Ludovic Court√®s <ludo@gnu.org> for pointing this out.

	Instead the user must use either a SSH agent (with
	`userauth-autopubkey!' procedure) or privide the passphrase
	interactively (the user will be asked for the passphrase by the
	underlying libssh procedure if the provided key is encrypted).

	* src/auth.c (guile_ssh_userauth_autopubkey_x): Likewise.

2014-01-22  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-type.c: Set default write buffer size to 1 byte.
	(ptob_close): Get size of the buffers from ptab entry.
	(_ssh_channel_to_scm): Likewise.

	* examples/echo/client.scm: Improve.

	* examples/echo/server.scm (print-help): Update.
	(main): Add `--port' option.  Print RSA/DSA key pathes and current
	bind port on the start.

	* src/channel-type.c (ptob_fill_input): Rename the argument.
	Update comments.

2014-01-20  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* examples/echo/server.scm (read-all): Fix a bug: return the first
	read line if there is no more data to read.
	* examples/echo/client.scm (read-all): Likewise.

	* examples/echo/server.scm (print-help): New procedure.
	(main): Handle command-line options.

2014-01-19  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message-func.c
	(guile_ssh_message_channel_request_open_reply_accept): Fix a bug:
	pass a `ssh_channel' instance to `_ssh_channel_to_scm' procedure
	instead of pointer to the instance.

2014-01-18  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/key-func.c: Update copyright dates.
	(guile_ssh_private_key_from_file): Improve
	assertion of passphrase.  Improve docstring and comments.

	* src/auth.c, src/auth.scm: Update copyright dates.

	* examples/sssh.scm (main): Use `userauth-autopubkey!' for
	authentication.

	* src/auth.c (guile_ssh_userauth_autopubkey_x): New procedure.
	* src/auth.scm (userauth-autopubkey!): Export.

2014-01-12  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* examples/sssh.scm (main): Ask the user for a passphrase.
	* src/key-func.c (guile_ssh_private_key_from_file): Change
	argument list: add optional argument `passphrase'.

2014-01-11  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* examples/ssshd.scm (handle-channel): Use `read-all' instead of
	`channel-read'.  Update.
	(handle-request-exec): Use `display' instead of `channel-write'.
	(shell-loop): Use `read-all' instead of `channel-read' and
	`channel-poll'.   Use `display' instead of `channel-write'.
	(main): Close a channel before disconnecting the session.
	* examples/sssh.scm (read-all): New procedure.
	(main): Use `read-all' instead of `read-line'.  Use `char-ready?'
	instead of `channel-poll'.

2014-01-07  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* TODO: Update.

	* src/channel-type.c (ptob_input_waiting): Improve error checking.
	(ptob_fill_input): Call `ssh_channel_poll' to update underlying
	SSH channel state and check whether we have data to read or not.
	Check if the channel is open.

	* examples/echo/server.scm: Update comments.
	(read-all): New procedure.
	(main): Update.  Catch exceptions.  Use `write-line' instead of
	`display'.
	* examples/echo/client.scm: Update comments.
	(read-all): New procedure.
	(main): Update.  Use `char-ready?' instead of `channel-poll'.  Use
	`write-line' instead of `display'.

	* src/channel-func.c (guile_ssh_channel_open_session): Update
	the documentation string.
	* src/channel-type.c: Update comments.
	* src/channel.scm: Likewise.

	* src/channel-type.c (_ssh_channel_to_scm): Don't set
	`SCM_BUFLINE' bit.
	(ptob_fill_input, ptob_flush, ptob_close, print_channel): Remove
	debug traces.
	(ptob_fill_input): Return EOF on `SSH_AGAIN'.

2014-01-06  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-type.c (ptob_close): Free the underlying SSH
	channel.
	* src/channel.scm (free-channel!): Remove.
	* src/channel-func.c (guile_ssh_channel_free): Remove.

	* src/channel-func.c (guile_ssh_channel_set_stream_x): New
	procedure.
	* src/channel.scm: Remove unneeded procedures.
	Export `channel-set-stream!'.

	* src/channel-type.c (_ssh_channel_to_scm): Don't set `SCM_OPN'
	bit on the newly created channel.
	* src/channel-func.c (guile_ssh_channel_open_session): Set
	`SCM_OPN' bit on the channel.
	* src/message-func.c
	(guile_ssh_message_channel_request_open_reply_accept): Likewise.

	* src/channel-type.c (ptob_write): Improve error handling.  Add a
	comment.  Remove debug information.
	(ptob_input_waiting): Change `FUNC_NAME' string.

	* src/channel-func.c (guile_ssh_channel_pool)
	(guile_ssh_channel_close): Remove.
	* src/channel-func.h: Likewise.

	* src/channel-type.c (ptob_flush): Improve.
	(ptob_close): Flush a port before closing its SSH channel.

2014-01-05  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-type.c (ptob_fill_input): Improve.

2014-01-04  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* examples/echo/server.scm (main): Use `char-ready?' predicate
	instead of the custom procedure `channel-poll'.

	* src/channel-type.c (ptob_close): New procedure.
	(print_channel): Don't try to get state of a channel if its port
	is closed because it leads to segfaults.  Closed port means closed
	channel.
	(init_channel_type): Register `ptob_close' with
	`scm_set_port_close'.
	(ptob_input_waiting): Call `ssh_channel_poll'.
	(init_channel_type): Register callback with
	`scm_set_port_input_waiting' procedure.

	* examples/echo/client.scm (main): Call `close' on a channel.
	* examples/echo/server.scm (main): Likewise.

2014-01-02  Artyom Poptsov  <poptsov.artyom@gmail.com>

	Use Guile port API to implement Guile-SSH channels.
	* src/channel-func.c (guile_ssh_channel_read)
	(guile_ssh_channel_write): Remove.
	* src/channel-func.h (guile_ssh_channel_read): Remove.
	* src/channel-type.c (ptob_fill_input, ptob_write, ptob_flush)
	(ptob_input_waiting, _ssh_channel_to_scm): New procedures.
	(guile_ssh_make_channel): Use `_ssh_channel_to_scm'.
	(_scm_to_ssh_channel): Use `SCM_STREAM' macro.
	(init_channel_type): Register Guile port callbacks.
	* src/channel-type.h (_ssh_channel_to_scm): Export.
	* src/channel.scm (channel-read, channel-write): Remove.
	* src/message-func.c
	(guile_ssh_message_channel_request_open_reply_accept): Use
	`_ssh_channel_to_scm'.
	* examples/echo: Add to the repository.
	* examples/Makefile.am: Add echo server/client example.
	* examples/README: Update.
	* examples/sssh.scm: Update.
	* README: Update.

2013-11-26  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* configure.ac, NEWS: Bump version to 0.4.0

2013-11-25  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* examples/ssshd.scm (handle-req-channel): Handle
	`channel-request-env'.
	(main): Improve handling of `request-channel'.
	Print path to a key and the port number on the start.

2013-11-23  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/base64.c (bin_to_base64): Change type of the second argument
	to int to prevent an infinite loop due to wrapping of the size_t
	value.
	* src/base64.h: Update.
	* src/key-func.c (guile_ssh_public_key_to_string): Change type of
	`key_len'.  Rename the argument.  Update comments.
	* NEWS: Update.

	* examples/sssh.scm (*option-spec*): Add `ssh-debug' switch.

	* README: Update.

	* examples/Makefile.am (dist_examples_DATA): Add missed
	`ssshd.scm'.
	(AM_CFLAGS): Remove.

2013-11-22  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* NEWS: Update.

	* src/channel-func.h: Add `guile_ssh_set_set_pty_size_x'.
	* src/channel-func.c (guile_ssh_channel_set_pty_size_x): New
	procedure.
	* src/channel.scm: Export `channel-set-pty-size!'.

2013-11-21  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message-type.c (print_message): New procedure.
	(init_message_type): Set the printer procedure for the smob.
	* NEWS: Update.

2013-11-20  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* build_aux/: Rename to `build-aux'.  Configuration files are
	updated.
	* configure.ac: Update.
	* Makefile.am: Update.

	* src/session-type.c (PRINT_DEBUG): Remove the macro.

2013-11-19  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-func.c (guile_ssh_channel_request_pty)
	(guile_ssh_channel_request_shell): New procedures.
	* src/channel.scm: Export `channel-request-pty' and
	`channel-request-shell'.

	* TODO, README, AUTHORS: Update.
	* NEWS: Update.  Fix a typo.

2013-11-18  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-func.c (guile_ssh_channel_read): Fix a memory
	freeing error: use `scm_from_locale_string' instead of
	`scm_take_locale_string', call `scm_gc_free' on allocated buffer.
	Improve error handling.  Add comments.

	* examples/sssh.scm (main): Separate libssh debug and the program
	debug mode.  Print SSH channels.

	* src/channel-type.c (print_channel): New procedure.
	(init_channel_type): Set the printer procedure for the smob.
	* NEWS: Update.

2013-11-17  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* TODO: Update.

2013-11-16  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* m4/Makefile.am, m4/guile.m4, m4/lib-link.m4: New files.
	* Makefile.am: Add "build_aux" and "m4" to `SUBDIRS'.
	* configure.ac: Use `AC_CONFIG_MACRO_DIR' to set m4 dir.
	Add "m4/Makefile" to `AC_CONFIG_FILES'.

	* Makefile.am (ACLOCAL_AMFLAGS): Set variable.
	* src/Makefile.am (AM_CFLAGS): Remove.
	(libguile_ssh_la_CPPFLAGS, snarfcppopts): Add `GUILE_CFLAGS'.

	* INSTALL: Update.

	* build_aux/Makefile.am: New file.
	* configure.ac: Store auxiliary build files in `build_aux'
	directory.  Add "build_aux/Makefile" to `AC_CONFIG_FILES'.

2013-11-09  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* configure.ac: Add check for Guile-2.0.

2013-11-08  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* configure.ac: Use AC_COPYRIGHT to store copyright information.

2013-11-06  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* configure.ac: Use `PKG_CHECK_MODULES' macro instead of
	`AC_SEARCH_LIBS' to check if the needed version of libssh is
	installed.

2013-11-03  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/session-func.c (guile_ssh_session_set): Use
	`_scm_to_ssh_const'.  Throw guile-ssh-error on error.  Make return
	value undefined.

	* NEWS, TODO: Update.

	Move common procedures for converting SCM values to SSH contants
	and vice versa to common.c file.
	* src/common.c, src/common.h: New files.
	* src/message-func.c (_ssh_const_to_scm): Remove.
	* src/server-func.c (guile_ssh_server_set_x): Use `_scm_to_ssh_const'.
	* src/Makefile.am (libguile_ssh_la_SOURCES): Add common.{c,h}.

	* src/message.scm (message-reply-success): New procedure.
	* examples/ssshd.scm (handle-req-auth, handle-req-channel, main):
	Use `message-reply-success'.

	* examples/ssshd.scm (handle-req-auth): Handle public key state.

	* src/message.scm (message-auth-reply-public-key-success): Rename
	to `message-auth-reply-public-key-ok'.
	* src/message-func.c
	(guile_ssh_message_auth_reply_public_key_success): Rename to
	`guile_ssh_message_auth_reply_public_key_ok'.

2013-11-02  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message.scm (auth-req:pubkey-state): New procedure.
	* src/message-func.c (get_auth_req): Store public key state in the
	vector.

	* examples/ssshd.scm: Add to the repository.
	* examples/README: Update.

	* src/server-func.c (guile_ssh_server_listen_x): Rename to
	`guile_ssh_server_listen'.
	* server.scm (server-listen!): Rename to `server-listen'.

	Fix a error with double free of memory.  The problem was that SSH
	keys are usually freed along with the object that contains them.
	For example, if a key is gotten from a SSH session it will be
	freed along with the session.  Not if we try to free the memory
	taken by the key then we get "double free" error.  To prevent it
	the new field in the key smob structure is introduced to track who
	is responsible for freeing the key.
	* src/key-type.h (key_data): Add "is_to_be_freed" field.
	* src/key-type.c (free_key_smob): Check if the key must be freed.
	* src/key-func.c (guile_ssh_private_key_from_file)
	(guile_ssh_public_key_from_private_key)
	(guile_ssh_public_key_from_file): Set "is_to_be_freed" field for
	the key.
	* src/message-func.c (get_auth_req): Mark a key that it must not
	be freed by GC.

2013-10-28  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/key-type.c (free_key_smob): Fix warnings.
	* src/key-func.c (guile_ssh_public_key_to_string): Likewise.

	* src/key-type.c (free_key_smob): Use `publickey_free' instead of
	`ssh_key_free'.

	* Makefile.am (SUBDIRS): Add examples/
	* configure.ac: Add examples/Makefile
	* examples/: Add to the repository.

	* src/server.scm (server-set-message-callback!): Remove.
	* src/server-func.c (callback)
	(guile_ssh_server_set_message_callback_x): Remove.

2013-10-27  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message-func.c: Update comments.  Re-organize order of
	procedures.
	(get_service_req, get_channel_open_req): New procedures.
	(guile_ssh_message_get_req): Handle SSH_REQUEST_SERVICE and
	SSH_REQUEST_CHANNEL_OPEN.

	* src/message.scm (service-req:service, channel-open-req:orig)
	(channel-open-req:orig-port, channel-open-req:dest)
	(channel-open-req:dest-port): New procedures.

	* src/message-func.c (guile_ssh_message_service_reply_success)
	(guile_ssh_message_auth_reply_success)
	(guile_ssh_message_auth_reply_public_key_success)
	(guile_ssh_message_channel_request_open_reply_accept): Add
	description.

2013-10-26  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message-func.c (guile_ssh_message_service_reply_success):
	New procedure.
	* src/message.scm: Add commentary.
	(message-service-reply-success): Export.

2013-10-20  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message.scm (exec-req:cmd): Export.

2013-10-19  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message.scm: Unify way of getting information from requests.
	(auth-req:user, auth-req:password, auth-req:pubkey, pty-req:term)
	(pty-req:width, pty-req:height, pty-req:pxwidth)
	(pty-req:pxheight, env-req:name, env-req:value, exec-req:cmd)
	(global-req:addr, global-req:port): New procedures.
	* src/message-func.c (get_auth_req, get_pty_req, get_env_req)
	(get_exec_req, get_global_req, guile_ssh_message_get_req): New
	procedures.
	(guile_ssh_message_auth_get_user)
	(guile_ssh_message_auth_get_password)
	(guile_ssh_message_auth_get_public_key)
	(guile_ssh_message_exec_get_command): Remove.

	* src/message-func.c (_scm_member_p): New procedure.
	(guile_ssh_message_auth_set_methods_x): Improve.

	Improve printing of SSH keys.
	* src/key-type.c (print_key): New procedure.
	(init_key_type): Register the callback for printing.
	(guile_ssh_key_get_type): Use `ssh_privatekey_type' instead of
	`ssh_key_type'.

2013-10-17  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message-func.c (guile_ssh_message_exec_get_command): New
	procedure.
	* src/message.scm (message-exec-get-command): Export.

2013-10-10  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/server-func.c: Fix a comment.
	(guile_ssh_server_listen_x): Fix a typo.

	Unificate the way of server configuration: use `server-set!' to set
	server to the blocking/nonblocking mode.
	* src/server-func.c (set_option): Handle 'blocking-mode
	(guile_ssh_server_set_blocking_x): Remove procedure.

	* src/server.scm (server-set-blocking!): Remove procedure.
	(make-server): Handle "blocking-mode" keyword.

	* src/server-func.c (set_option): Don't use TYPE macro.
	(TYPE): Remove the macro.
	(set_blocking_mode): New procedure.

2013-09-29  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message-func.c (guile_ssh_message_auth_get_password): Return
	a password as a string instead of a symbol.

2013-09-26  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/server-type.c (guile_ssh_make_server): Change Scheme name to
	`%make-server'.
	* src/server.scm (make-server): New procedure.

2013-09-25  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/session-func.c (guile_ssh_connect): Rename to
	`guile_ssh_connect_x'.  Throw an exception on error.
	(guile_ssh_authenticate_server): Throw an exception on error.

	* src/session-func.h: Add `guile_ssh_connect_x'.  Add
	`guile_ssh_authenticate_server'.

	* src/session-type.c (guile_ssh_make_session): Change Scheme name
	to `%make-session'.
	* src/session.scm (make-session): New procedure.

2013-09-24  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/message-func.c (guile_ssh_message_reply_default)
	(guile_ssh_message_auth_reply_success)
	(guile_ssh_message_auth_reply_public_key_success)
	(guile_ssh_message_channel_request_reply_success)
	(guile_ssh_message_auth_set_methods_x): Throw an exception on
	error.  Make return value undefined.  Change the description.
	* src/server-func.c (guile_ssh_server_set_x)
	(guile_ssh_server_listen_x, guile_ssh_server_handle_key_exchange):
	Likewise.

	* src/session-func.c (guile_ssh_write_known_host): Throw an
	exception on error.  Make return value undefined.
	* src/channel-func.c (guile_ssh_channel_open_session)
	(guile_ssh_channel_request_exec, guile_ssh_channel_request_env)
	(guile_ssh_channel_close): Likewise.

2013-09-22  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/server-func.c (guile_ssh_server_accept_x): Rename to
	`guile_ssh_server_accept'.  Change Scheme name to `server-accept'.
	Change the function so it has no side effects.
	(guile_ssh_server_listen): Rename to `guile_ssh_server_listen_x'
	because of side effects.  Change Scheme name to `server-listen!'.

	* src/server-func.h: Update.
	* src/server.scm: Export `server-accept'.  Rename `server-listen'
	to `server-listen!'.

	* src/message-func.c
	(guile_ssh_message_channel_request_reply_success): New procedure.
	* src/message.scm (message-channel-request-reply-success): Export.

	* src/session-func.c (guile_ssh_write_known_host): Fix the wrong
	Scheme name: rename to `write-known-host!'.
	* src/session.scm: Likewise.

2013-09-21  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-func.c (guile_ssh_channel_write): New procedure.
	* src/channel.scm: Likewise.

	* NEWS: Update.

	* src/session-func.c (session_options): Don't use TYPE macro to
	get names of SSH constants.
	(set_option): Likewise.
	(TYPE): Remove the macro.

	* src/auth.c, src/auth.scm, src/channel-func.c,
	src/channel-type.c, src/channel.scm, src/key-func.c,
	src/key-type.c, src/key.scm, src/session-func.c,
	src/session-type.c, src/session.scm, src/version.c,
	src/version.scm, src/message-func.c, src/message-type.c,
	src/message.scm, src/server-func.c, src/server-type.c,
	src/server.scm: Remove "ssh:" prefix from functions names.  Update
	comments.

	Implement the SSH message type.
	* src/Makefile.am: Add message* files.
	* src/server-func.c (guile_ssh_server_set_message_callback_x)
	(guile_ssh_server_message_get, callback): New procedures.
	* src/server.scm (ssh:server-set-message-callback!)
	(ssh:server-message-get): Export.
	* src/message-func.c, src/message-func.h, src/message-main.c,
	src/message-type.c, src/message-type.h, src/message.scm: New
	files.

2013-08-28  Artyom Poptsov  <poptsov.artyom@gmail.com>

	Implement the basic server functionality.
	* src/server-func.c, src/server-func.h, src/server-main.c,
	src/server-type.c, src/server-type.h, src/server.scm: New files.
	* src/Makefile.am: Add server related sources.

2013-08-26  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/session-func.c: Use a short macro for getting long SSH
	options names.
	(TYPE): New macro.
	(set_option): Use TEST macro.

2013-08-25  Artyom Poptsov  <poptsov.artyom@gmail.com>

	Use the Guile magic snarfer to make guile_ssh_* functions visible
	to the Scheme world.  Use functions names as they seen from Scheme
	instead of C names in type check macros.
	* src/auth.c, src/channel-func.c, src/channel-type.c,
	src/key-func.c, src/key-type.c, src/session-func.c,
	src/session-type.c, src/version.c: Use snarfing macros.
	* src/Makefile.am: Use guile-snarf to generate needed files.  Fix
	some comments.
	* configure.ac: Use AM_SILENT_RULES.
	* .gitignore: Ignore files produced by the magic snarfer.

2013-07-29  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-func.c (guile_ssh_channel_read): Fix memory
	corruption during freeing of the allocated memory.  Initialize
	allocated memory with zeroes.  Don't use dynwind.
	* NEWS: Update.

2013-07-20  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* NEWS: Update.

2013-07-19  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/session-func.c: Fix a typo in the option symbol:
	'strcthostkeycheck -> 'stricthostkeycheck
	(set_bool_opt): Fix the assertion for the third argument: expect
	a boolean value instead of an integer value.

2013-07-14  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* configure.ac, NEWS: Bump version to 0.3.1

	Fix several bugs.
	* src/threads.c, src/threads.h: Fix a bug with variable
	initialization: use constant value to initialize SSH threads
	state.
	* src/Makefile.am (libguile_ssh_la_SOURCES): Add missed files.
	(libguile_ssh_la_LDFLAGS): Add missed flags.

	* src/channel-type.c (guile_ssh_make_channel): Cleanup the code.

	* README: Add info about dependencies.
	* TODO: Update.

	Make the library thread-safe.
	* src/channel-main.c (init_channel): Initialize threads.
	* src/key-main.c (init_key): Likewise.
	* src/session-main.c (init_session): Likewise.
	* src/threads.c, src/threads.c: New files.

2013-07-13  Artyom Poptsov  <poptsov.artyom@gmail.com>

	Use a simpler method to GC'ing of SSH channels.  The idea is that
	we don't have to free resources allocated by a channel during its
	GC'ing, because these resources will be freed anyway when the
	related SSH session is GC'ed.  However, to be able to control
	allocating of resources more precisely, introduce new procedure
	ssh:free-channel! that can be used for freeing resources allocated
	by a channel.
	* src/channel-func.c (guile_ssh_channel_free): New procedure.
	(init_channel_func): Add ssh:free-channel!
	* src/channel-type.c (free_channel): Don't free channel resourses.
	(guile_ssh_make_channel): Remove extra code.
	* src/channel-type.h: Remove the extra field from channel_data.
	* src/channel.scm: Add ssh:free-channel!
	* src/session-type.c (free_session): Remove extra code.

	* configure.ac, NEWS: Bump version to 0.3

	Implement equalp callbacks for smobs.
	* src/channel-type.c (equalp_channel): New procedure.
	(init_channel_type): Register the equalp callback.
	* src/key-type.c (equalp_key): New procedure.
	(init_key_type): Register the equalp callback.
	* src/session-type.c (equalp_session): New procedure.
	(init_session_type): Register the equalp callback.

	* src/session-type.c (_scm_to_ssh_session): New procedure.
	(free_session): Use _scm_to_ssh_session.
	* src/session-type.h: (_scm_to_ssh_session): New procedure.
	* src/key-type.c (free_key_smob, guile_ssh_key_get_type): Use
	_scm_to_ssh_key to get smob data.
	(guile_ssh_is_public_key_p): Likewise.  Use _public_key_p to check
	the key type.
	(guile_ssh_is_private_key_p): Use _scm_to_ssh_key.  Use
	_private_key_p to check the key type.
	(_scm_to_ssh_key, _private_key_p, _public_key_p): New procedures.
	* src/key-type.h (_scm_to_ssh_key, _private_key_p, _public_key_p):
	New procedures.
	* src/channel-type.c (_scm_to_ssh_channel): New procedure.
	(guile_ssh_make_channel): Use _scm_to_ssh_session.
	* src/channel-type.h (_scm_to_ssh_channel): New procedure.
	* src/auth.c (guile_ssh_userauth_pubkey)
	(guile_ssh_userauth_password, guile_ssh_userauth_none)
	(guile_ssh_userauth_get_list): Use _scm_to_* to get smob data and
	predicates related so corresponding types to check their types.
	Clean up the code.
	* src/session-func.c (guile_ssh_blocking_flush)
	(guile_ssh_session_set, guile_ssh_connect, guile_ssh_disconnect)
	(guile_ssh_get_protocol_version, guile_ssh_get_error)
	(guile_ssh_authenticate_server, guile_ssh_get_public_key_hash)
	(guile_ssh_write_known_host, guile_ssh_is_connected_p): Use
	_scm_to_ssh_session.
	* src/key-func.c (guile_ssh_public_key_to_string)
	(guile_ssh_private_key_from_file)
	(guile_ssh_public_key_from_private_key)
	(guile_ssh_public_key_from_file): Use _scm_to_ssh_key to get smob
	data.  Use _private_key_p and _public_key_p predicates to check
	smob type.
	* src/channel-func.c (guile_ssh_channel_open_session)
	(guile_ssh_channel_request_exec, guile_ssh_channel_request_env)
	(guile_ssh_channel_pool, guile_ssh_channel_read)
	(guile_ssh_channel_close, guile_ssh_channel_is_open_p)
	(guile_ssh_channel_is_eof_p): Use _scm_to_ssh_channel.

	* src/channel-func.c (guile_ssh_channel_close): Fix return value:
	return SCM_BOOL_T if channel is closed successfully, SCM_BOOL_F
	otherwise.

	Fix GC'ing of SSH objects: the program doesn't crashes anymore
	during GC'ing of channels and keys.
	* src/session-type.c (free_session): Mark all related channels as
	freed.
	(guile_ssh_make_session): Initialize the channels array.
	* src/key-type.c (mark_key_smob): Fix smob marking.
	* src/channel-type.c (free_channel): Check if the channel has been
	already freed along with the related SSH session.
	(guile_ssh_make_channel): Store the reference to the channel in
	the array of channels related to the SSH session.
	* src/channel-type.h: Add is_channel_alive field to channel_data.
	* TODO: Add to the repository.

2013-06-23  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/key-type.h: Improve storing of public keys represented as a
	SSH string -- store the key type along with the key itself.
	* src/key-func.c (guile_ssh_public_key_from_file): Likewise.
	(public_key_to_ssh_string): Update.
	* src/key-type.c (guile_ssh_key_get_type): New function.
	(scm_from_ssh_key_type): New static function.
	(free_key_smob): Update.
	(init_key_type): Define ssh:get-key-type.
	* src/key.scm: Export ssh:get-key-type.

2013-06-16  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/auth.c (guile_ssh_userauth_get_list): Fix a bug with wrong
	scm_append call during making the list.

	Implement ssh:userauth-get-list that returns a list of available
	authentication methods for a given SSH session.
	* src/auth.c (guile_ssh_userauth_get_list): New function.
	(init_auth_func): Define ssh:userauth-get-list.

	* src/auth.h: Likewise.
	* src/auth.scm: Add ssh:userauth-get-list.

2013-06-15  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/key-func.c: Fix a comment.

	Improve working with public keys.  Because some libssh functions
	working with public keys represented as a ssh_string instead of a
	ssh_public_key, we try to hide this peculiarity so all kinds of
	keys are look like a key_smob from the Scheme perspective.
	* src/key-type.h: Add ssh_public_key_str to key_data struct.
	* src/key-type.c (free_key_smob): Handle public keys that
	represented by a ssh_string.
	(guile_ssh_is_public_key_p): Likewise.
	* src/key-func.c (public_key_to_ssh_string): New function.
	(guile_ssh_public_key_to_string): Fix converting a public key.
	(guile_ssh_public_key_from_file): Make it work.

	* src/key-func.h: Add public_key_to_ssh_string.
	* src/Makefile.am: Add base64.c
	* src/base64.c, src/base64.h: New files.

2013-06-08  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-func.c: Include error.h
	(guile_ssh_channel_read): Initialize obtained_data with
	SCM_BOOL_F
	* src/auth.c: Include error.h
	(guile_ssh_userauth_pubkey): Initialize strings with null.

	* src/session-func.c (guile_ssh_connect)
	(guile_ssh_blocking_flush): Return 'error by default.

	* src/session-func.c (set_uint32_opt): Fix wrong variable
	assignment.

	* src/Makefile.am (AM_LDFLAGS): Fix flags.
	(AM_CFLAGS): Likewise.  Add "-Wall" and "-g" flags.

	* src/key-func.c (guile_ssh_public_key_to_string): Fix SCM_ASSERT
	call.

2013-05-26  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/channel-func.c (guile_ssh_channel_read): Fix call of
	undefined function.
	* src/key-func.c (guile_ssh_private_key_from_file): Likewise.
	Improve error handling.

2013-05-25  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* configure.ac, NEWS: Bump version to 0.2

	* src/channel-func.c (guile_ssh_channel_is_eof_p)
	(guile_ssh_channel_is_open_p, guile_ssh_channel_close)
	(guile_ssh_channel_read, guile_ssh_channel_pool)
	(guile_ssh_channel_request_env, guile_ssh_channel_request_exec)
	(guile_ssh_channel_open_session): Add check for smob type.

	* src/auth.c: Fix comment.
	* src/key-func.c: Add comments.

	* src/auth.h, src/channel-func.h, src/channel-type.h, src/error.h,
	src/key-func.h, src/key-type.h, src/session-func.h,
	src/session-type.h: Mark prototypes as external functions.
	Simplify SCM functions arg list.

2013-05-24  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/auth.c (guile_ssh_userauth_none): New function.
	(ssh_auth_result_to_symbol): New static function.
	(guile_ssh_userauth_pubkey): Use ssh_auth_result_to_symbol to
	convert auth result to a Scheme symbol.
	(guile_ssh_userauth_password): Likewise.
	* src/auth.scm: Export ssh:userauth-none!

	* src/session-func.c: Add comments.
	(set_option): Implement missed options.
	(set_port_opt): New static function.

2013-05-19  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/session.scm: Export ssh:get-error

	* src/session-func.c (set_uint64_opt): Remove extra semicolon.

	* .gitignore: Update.

	* src/session-type.c (guile_ssh_make_session): Return SCM_BOOL_F
	on error.

	* Clean up the code.  Fix coding style.

	* src/auth.scm: Fix comments.

	* Improve the library.
	Quite stable version, but some functions are not implemented yet.

2013-05-12  Artyom Poptsov  <poptsov.artyom@gmail.com>

	* src/ssh-error.c: Include libguile.h

	* src/session.c (guile_ssh_blocking_flush): Fix a misspelled
	function name: scm_blockign_flush -> ssh_blocking_flush
	* src/channel.c (guile_ssh_channel_poll): Fix a misspelled
	function name: scm_is_boolean -> scm_is_bool
	(guile_ssh_channel_read): Likewise.  Fix variable names.

	* COPYING, INSTALL, NEWS: Add to the repository.

	* AUTHORS: Add to the repository.

	* README: Add to the repository.

	* src/Makefile.am: Include Scheme files in the distribution.

