@c -*-texinfo-*-

@node Servers
@section Servers

@cindex servers
@tindex server

@deffn {Scheme Procedure} server? x
Return @code{#t} if @var{x} is a Guile-SSH server, @code{#f}
otherwise.
@end deffn

@deffn {Scheme Procedure} %make-server
Make a new Guile-SSH server.
@end deffn

@deffn {Scheme Procedure} server-set! server option value
Set a @var{option} to @var{value} for Guile-SSH @var{server}.  Throw
@code{guile-ssh-error} on error.  Return value is undefined.
@end deffn

@deffn {Scheme Procedure} server-listen server
Start listening to the socket.  Throw @code{guile-ssh-error} on error.
Return value undefined.
@end deffn

@deffn {Scheme Procedure} server-accept server
Accept an incoming @acronym{SSH} connection to the @var{server}.
Return a new Guile-SSH session or @code{#f} on error.
@end deffn

@deffn {Scheme Procedure} server-handle-key-exchange session
Handle key exchange for a @var{session} and setup encryption.  Throw
@code{guile-ssh-error} on error.  Return value is undefined.
@end deffn

@deffn {Scheme Procedure} server-message-get session
Get a message from a SSH client.  Return a new Guile-SSH message, or
@code{#f} on error.
@end deffn

@c Local Variables:
@c TeX-master: "guile-ssh.texi"
@c End:
