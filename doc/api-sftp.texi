@c -*-texinfo-*-
@c This file is part of Guile-SSH Reference Manual.
@c Copyright (C) 2015 Artyom V. Poptsov
@c See the file guile-ssh.texi for copying conditions.

@node SFTP
@section SFTP

@cindex SFTP
@cindex file transfer

The @code{(ssh sftp)} module provides procedures for working with SFTP.

@subsection SFTP session

@deffn {Scheme Procedure} make-sftp-session ssh-session
Make a new SFTP session using a @var{ssh-session}, initialize the session with
a server.  Return initialized SFTP session or throw @code{guile-ssh-error}
exception on an error.
@end deffn

@deffn {Scheme Procedure} sftp-session? x
Return @code{#t} if @var{x} is a SFTP session, @code{#f} otherwise.
@end deffn

@deffn {Scheme Procedure} sftp-get-session sftp-session
Get the parent SSH session for a @var{sftp-session}.
@end deffn

@deffn {Scheme Procedure} sftp-get-error sftp-session
Get the last SFTP error from a @var{sftp-session}.  Return the error name as a
symbol, or throw @var{guile-ssh-error} on if an error occured in the procedure
itself.
@end deffn

@deffn {Scheme Procedure} sftp-mkdir sftp-session dirname [mode=#o777]
Create a directory @var{dirname} using a @var{sftp-session} with a @var{mode}.
If the @var{mode} is omitted, the current umask value is used.
@end deffn

@deffn {Scheme Procedure} sftp-rmdir sftp-session dirname
Remove a directory @var{dirname}.  Throw @code{guile-ssh-error} on an error.
Return value is undefined.
@end deffn

@deffn {Scheme Procedure} sftp-mv sftp-session source dest
Move or rename a file @var{source} into a @var{dest}.  Throw
@code{guile-ssh-error} on an error.  Return value is undefined.
@end deffn

@deffn {Scheme Procedure} sftp-symlink sftp-session target dest
Create a symbolic link to a @var{target} in a @var{dest}.  Throw
@code{guile-ssh-error} on an error.  Return value is undefined.
@end deffn

@deffn {Scheme Procedure} sftp-readlink sftp-session path
Read the value of a symbolic link pointed by a @var{path}.  Return the value
or @code{#f} on an error.
@end deffn

@deffn {Scheme Procedure} sftp-chmod sftp-session filename mode
Change permissions of a remote @var{filename} using @var{sftp-session}.
Permissions are set to @code{mode & ~umask}.  Throw @code{guile-ssh-error} on
an error.  Return value is undefined.
@end deffn

@deffn {Scheme Procedure} sftp-unlink sftp-session filename
Unlink (delete) a remote @var{filename} using @var{sftp-session}.  Throw
@code{guile-ssh-error} on an error.  Return value is undefined.
@end deffn

@subsubsection Low-Level API

@deffn {Scheme Procedure} %make-sftp-session ssh-session
Make a new SFTP session using a @var{ssh-session} without initialization of
the session with a server.  Throw @code{guile-ssh-error} exception on an
error.

Note that you should call @code{sftp-init} on the returned SFTP session before
using it.
@end deffn

@deffn {Scheme Procedure} %sftp-init sftp-session
Initialize a @var{sftp-session} with the server.  Throw @code{guile-ssh-error}
exception on an error, return value is undefined.
@end deffn

@subsection SFTP file

Remote files are represented as regular Guile ports that allow random access.

@deffn {Scheme Procedure} sftp-open-file sftp-session filename flags [mode=#o666]
Open a remote @var{filename} using an @var{sftp-session}, return an open file
port.  Throw @code{guile-ssh-error} on an error.
@end deffn

@deffn {Scheme Procedure} sftp-file? x
Return @code{#t} if @var{x} is an SFTP file port, @code{#f} otherwise.
@end deffn

@c Local Variables:
@c TeX-master: "guile-ssh.texi"
@c End:
