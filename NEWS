#+TITLE: Guile-SSH News -- history of user-visible changes.
#+STARTUP: content hidestars

Copyright (C) Artyom V. Poptsov <poptsov.artyom@gmail.com>

  Copying and distribution of this file, with or without modification,
  are permitted in any medium without royalty provided the copyright
  notice and this notice are preserved.

* Unreleased
** `get-public-key-hash' now returns the hash as a bytevector
** New procedure `bytevector->hex-string'
   in =(ssh session)=

* Changes in version 0.6.0 (2014-03-23)
** Remove username from parameter list of auth procedures
   `userauth-password!' and `userauth-pubkey!' don't take a username
   as a parameter anymore.  Rationale: According to libssh 0.6 docs,
   most server implementations do not permit changing the username
   during authentication.  Moreover, the parameter was deprecated in
   libssh 0.5.3.

   Elimination of the username makes Guile-SSH Auth API clearer and
   simpler.  Username can be set either on creation of a session or by
   calling of `session-set!' procedure.
** `server-accept' now throws `guile-ssh-error' on error
** Improve reads from channels
   Return EOF immediately if the channel is closed instead of polling
   it for data (which causes notable latency on the first read).
   Thanks Ludovic CourtÃ¨s for the patch.
** Compile Guile modules
   Compile Guile modules and install compiled files if GNU Guile 2.0.x
   is available.
** Update Texinfo documentation
*** Update Auth API description
*** Update Server API description
*** Update Acknowledgments
** Update examples
*** Use actual path to Guile interpreter in the shebang
    Executables will be produced during building of the Guile-SSH.
*** Handle `guile-ssh-error' on `server-accept'
*** Catch `guile-ssh-error' on reading from a port
*** ssshd
**** Add `--port', `--ssh-debug' and `--pid-file' option
**** Store the PID in a file
     instead of printing it to stdout.
**** Handle password authentication correctly
*** sssh
**** Add `--ssh-debug' option
** Improve automated tests
*** Prevent sssh-ssshd from asking of a SSH agent for keys
*** Make parallel tests work

* Changes in version 0.5.0 (2014-02-05)
** Implement Guile-SSH channels as GNU Guile ports.
   Now channels can be used with regular procedures such as `display',
   `write' and `read-line'.
** `session-set!' and `server-set!' now take log-verbosity as a symbol
   Use symbols to represent log levels instead of numbers.
** Remove duplicates of some session options
   Remove duplicates that are existed for some Guile-SSH session
   options: `port-str' (duplicates `port', differs only in expected
   type of value), `log-verbosity-str' (duplicates `log-verbosity',
   differs only in expected type of value), `add-identity' (duplicates
   `identity', no differences).
** New `userauth-autopubkey!' procedure.
   The procedure can be used for public key authentication with a SSH
   agent.
** New procedures.
   `channel-set-stream!', `channel-get-stream', `session?', `server?',
   `message?'.
** Remove procedures.
   These procedures are removed due to changes in Guile-SSH channel
   API: `close-channel!', `channel-poll' `free-channel!',
   `channel-read`, `channel-write'.
** Add documentation in Texinfo format
   The Guile-SSH reference manual in Info format will be installed on
   `make install' into `${prefix}/share/info' directory.
** Update sssh/ssshd example.
*** `examples/sssh.scm' and `examples/ssshd.scm' are updated
    to use the new Guile-SSH channel API.
*** `sssh.scm` now uses `userauth-autopubkey!'
*** `ssshd.scm' now parses command-line options
    See `ssshd.scm --help'.
** Add echo server/client example.
   See `examples/echo' directory.
** Add automated tests.
   See `tests/' directory.

* Changes in version 0.4.0 (2013-11-26)
** Port the library to GNU Guile version 2.0
   Now the library works with GNU Guile version 2.0 as well as 1.8.
** Remove "ssh:" prefix from procedures names.
   If it is needed, an user's prefix can be added by setting a renamer
   for a module on loading.  See the documentation for the GNU Guile
   module system.
** Implement basic SSH server API.
** Fix a memory corruption in `channel-read'
   The problem was seen on reading of an output from "lsb_release -a"
   command.
** Fix a memory corruption during GC'ing of SSH keys.
** Fix a bug in `session-set!'
   Fix the bug that leads to an error if the user tried to set a
   correct boolean option.
** New `channel-write' procedure.
** New `channel-request-pty' procedure.
** New `channel-request-shell' procedure.
** New `channel-set-pty-size!' procedure.
** Fix the name of `write-known-host!'
   The procedure was called `authenticate-server' by mistake.  Rename
   it to `write-known-host!'.
** Change error handling in some procedures.
   Now `write-known-host!', `channel-open-session',
   `channel-request-exec', `channel-request-env', `close-channel!',
   throw an exception on error.  The return value of these procedures
   now is undefined.
** `authenticate-server' now throws guile-ssh-error exception on error.
   Don't return the 'error symbol, throw an exception instead.
** `server-set!' now throws guile-ssh-error exception on error.
   The return value now is undefined.
** Rename `make-session' to `%make-session'.
   See `make-session' below.
** New `make-session' procedure.
   This is a convenient wrapper for `%make-session' which allows to
   set session options by passing them as keywords.
** Rename `connect' to `connect!'.
** Fix a typo in an option symbol
   'strcthostkeycheck -> 'stricthostkeycheck
** Fix an infinite loop in `public-key->string'.
   The problem was observed on Ubuntu GNU/Linux 10.04 LTS.
** Add examples to the repository.
   See the "examples/" directory.
** Improve printing of SSH keys, channels and messages.
   Examples: #<public rsa key>, #<open ssh channel>

* Changes in version 0.3.1 (2013-07-14)
** Use a simpler method to GC'ing of SSH channels.
   The idea is that we don't have to free resources allocated by a
   channel during its GC'ing, because these resources will be freed
   anyway when the related SSH session is GC'ed.  However, to be able
   to control allocating of resources more precisely, introduce new
   procedure ssh:free-channel! that can be used for freeing resources
   allocated by a channel.
** ssh:free-channel!
   New procedure.
** Make the library thread-safe.

* Changes in version 0.3 (2013-07-13)
** Improve working with public keys.
   Because some libssh functions are working with public keys
   represented as a ssh_string instead of a ssh_public_key, we try to
   hide this peculiarity so all kinds of keys are look like a <key>
   class from the Scheme perspective.
** Fix segmentation faults on GC'ing of SSH objects.
   The program doesn't crashes anymore during GC'ing of SSH objecs.
** ssh:public-key-from-file
   Make it work.  Return newly created <key> instance or #f on error.
** ssh:public-key->string
   Take a key as a <key> instance.
** ssh:private-key-from-file
   Fix call to an undefined procedure.  Return #f on error.
** ssh:get-key-type
   New procedure.  The procedure returns type for a passed <key>
   instance.  Possible types are: 'dss, 'rsa, 'rsa1, 'unknown
** ssh:userauth-get-list
   New procedure.  The procedure returns a list of available
   authentication methods for a given SSH session
** ssh:channel-read
   Fix call to an undefined procedure.  Throw guile-ssh-error
   exception on error.
** ssh:close-channel!
   Fix return value: return #t if channel is closed successfully, #f
   otherwise.
** ssh:blocking-flush!
   Return 'error by default.
** ssh:session-set!
   Fix a bug with uint32 options setting.
** SSH objects now comparable.

* Changes in version 0.2 (2013-05-25)
** Release of the first stable version of Guile-SSH.

Local Variables:
mode: org
End:
